#!/usr/bin/env python3
#
#    pbcollectresults - collect results of a 'phishing' engagement
#
"""
    Designed to be scheduled a few hours after the final 'phish' to
    allow time for the targets to fall for it. In this case it will
    be run via an 'at' job generated by the 'create-plan' script.

    Can also be run 'manually' any time to generate an interum status report.

"""

import os
import sys
from pbgophish import select_the_group, get_results
from pbos import check_recip_addresses, send_the_report
from pbsettings import GOPHISH_KEY, URL


def main():

    if len(sys.argv) < 3:
        sys.exit(
        "\n Usage: pbcollectresults <usergroup> <rcp1@dom.kr> [<rcip2@dim.kr]\n"
        "\n e.g pbcollectresults ACME1432  jeff@acme.co.kr pam@wif.org \n"
        )

    base_group = sys.argv[1]
    recips=[]
    for param in range(2, len(sys.argv)):
        recips.append(sys.argv[param])
    check_recip_addresses(recips)
    select_the_group(base_group)
    r = get_results()
    send_the_report(r, base_group, recips)

# -------------end of main() --------------------------------------------------


if __name__ == '__main__':
    sys.exit(main())

